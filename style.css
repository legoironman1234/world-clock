@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:wght@500&display=swap');


body {
    font-family: IBM Plex Mono, monospace;
    font-size: 64px;
    font-weight: 500;
    line-height: 1.5;

    background-color: #111118;
    color: #ffffff;
}

#map { 
    height: 200px;
    padding-bottom: 25%;
}
h1 { font-size: 12px; }

.search-box{
    width: 600px;
    background: transparent;
    margin: 200px auto 0;
    border-radius: 5px;
}

.row{
    display: flex;
    align-items: center;
    padding: 10px 20px;
    height: 100px;
    padding-bottom: 0px;
}

input {
    flex: 1;
    height: 50px;
    background: #2d2d33;
    border: 0;
    outline: 0;
    font-size: 30px;
    font-family: IBM Plex Mono, monospace;
    padding: 12px 20px;
    color: white;

}

#add-button {
    background-color:#4a4a54; /* Green */
    border: none;
    color: white;
    padding: 4px 32px;
    text-align: center;
    font-weight: 900;
    display: inline-block;
    font-family: IBM Plex Mono, monospace;
    font-size: 50px;
}

#add-button:hover {
    box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24),0 17px 50px 0 rgba(0,0,0,0.19);
}

.result-box {
    padding: 0px 20px;
}

.result-box ul {
    border-top: 1px solid #999;
    background: #2d2d33;
    padding: 10px 20px;
    font-size: 20px;  
}

.result-box ul li {
    list-style: none;
    border-radius: 3px;
    padding: 15px 20px;
    cursor: pointer;
}

.result-box ul li:hover{
    background-color: #8a8aa26a;
}

section.times div {
    padding: 24px 36px 24px 36px;
    display: flex;
    justify-content: space-between;
    border-bottom: 1px solid rgba(255, 255, 255, 0.2);
}

section.times h2:before {
    content: "";
    display: inline-block;
    width: 0.8em;
    height: 0.8em;
    background-color: #33333a;
    border-radius: 50%;
    margin: 0 0.5em 0 0;
    vertical-align: -0.05em;
    transition: background-color 0.5s;
}

section.times div.awake h2:before{
    background-color: #fff182;

}

.leaflet-layer,
.leaflet-control-zoom-in,
.leaflet-control-zoom-out,
.leaflet-control-attribution {
    filter: invert(100%) hue-rotate(180deg) brightness(95%) contrast(90%);
}
